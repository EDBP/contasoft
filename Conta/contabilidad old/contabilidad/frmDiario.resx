<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="simpleButton3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KwAAAABJRU5ErkJggg==
</value>
  </data>
</root>